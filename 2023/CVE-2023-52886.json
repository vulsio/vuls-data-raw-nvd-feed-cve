{
	"cve": {
		"CVE_data_meta": {
			"ASSIGNER": "cve@kernel.org",
			"ID": "CVE-2023-52886"
		},
		"data_format": "MITRE",
		"data_type": "CVE",
		"data_version": "4.0",
		"description": {
			"description_data": [
				{
					"lang": "en",
					"value": "In the Linux kernel, the following vulnerability has been resolved:\n\nUSB: core: Fix race by not overwriting udev->descriptor in hub_port_init()\n\nSyzbot reported an out-of-bounds read in sysfs.c:read_descriptors():\n\nBUG: KASAN: slab-out-of-bounds in read_descriptors+0x263/0x280 drivers/usb/core/sysfs.c:883\nRead of size 8 at addr ffff88801e78b8c8 by task udevd/5011\n\nCPU: 0 PID: 5011 Comm: udevd Not tainted 6.4.0-rc6-syzkaller-00195-g40f71e7cd3c6 #0\nHardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 05/27/2023\nCall Trace:\n <TASK>\n __dump_stack lib/dump_stack.c:88 [inline]\n dump_stack_lvl+0xd9/0x150 lib/dump_stack.c:106\n print_address_description.constprop.0+0x2c/0x3c0 mm/kasan/report.c:351\n print_report mm/kasan/report.c:462 [inline]\n kasan_report+0x11c/0x130 mm/kasan/report.c:572\n read_descriptors+0x263/0x280 drivers/usb/core/sysfs.c:883\n...\nAllocated by task 758:\n...\n __do_kmalloc_node mm/slab_common.c:966 [inline]\n __kmalloc+0x5e/0x190 mm/slab_common.c:979\n kmalloc include/linux/slab.h:563 [inline]\n kzalloc include/linux/slab.h:680 [inline]\n usb_get_configuration+0x1f7/0x5170 drivers/usb/core/config.c:887\n usb_enumerate_device drivers/usb/core/hub.c:2407 [inline]\n usb_new_device+0x12b0/0x19d0 drivers/usb/core/hub.c:2545\n\nAs analyzed by Khazhy Kumykov, the cause of this bug is a race between\nread_descriptors() and hub_port_init(): The first routine uses a field\nin udev->descriptor, not expecting it to change, while the second\noverwrites it.\n\nPrior to commit 45bf39f8df7f (\"USB: core: Don't hold device lock while\nreading the \"descriptors\" sysfs file\") this race couldn't occur,\nbecause the routines were mutually exclusive thanks to the device\nlocking.  Removing that locking from read_descriptors() exposed it to\nthe race.\n\nThe best way to fix the bug is to keep hub_port_init() from changing\nudev->descriptor once udev has been initialized and registered.\nDrivers expect the descriptors stored in the kernel to be immutable;\nwe should not undermine this expectation.  In fact, this change should\nhave been made long ago.\n\nSo now hub_port_init() will take an additional argument, specifying a\nbuffer in which to store the device descriptor it reads.  (If udev has\nnot yet been initialized, the buffer pointer will be NULL and then\nhub_port_init() will store the device descriptor in udev as before.)\nThis eliminates the data race responsible for the out-of-bounds read.\n\nThe changes to hub_port_init() appear more extensive than they really\nare, because of indentation changes resulting from an attempt to avoid\nwriting to other parts of the usb_device structure after it has been\ninitialized.  Similar changes should be made to the code that reads\nthe BOS descriptor, but that can be handled in a separate patch later\non.  This patch is sufficient to fix the bug found by syzbot."
				}
			]
		},
		"problemtype": {
			"problemtype_data": [
				{
					"description": [
						{
							"lang": "en",
							"value": "CWE-125"
						}
					]
				}
			]
		},
		"references": {
			"reference_data": [
				{
					"name": "https://git.kernel.org/stable/c/7fe9d87996062f5eb0ca476ad0257f79bf43aaf5",
					"tags": [
						"Mailing List",
						"Patch"
					],
					"url": "https://git.kernel.org/stable/c/7fe9d87996062f5eb0ca476ad0257f79bf43aaf5"
				},
				{
					"name": "https://git.kernel.org/stable/c/7fe9d87996062f5eb0ca476ad0257f79bf43aaf5",
					"tags": [
						"Mailing List",
						"Patch"
					],
					"url": "https://git.kernel.org/stable/c/7fe9d87996062f5eb0ca476ad0257f79bf43aaf5"
				},
				{
					"name": "https://git.kernel.org/stable/c/8186596a663506b1124bede9fde6f243ef9f37ee",
					"tags": [
						"Mailing List",
						"Patch"
					],
					"url": "https://git.kernel.org/stable/c/8186596a663506b1124bede9fde6f243ef9f37ee"
				},
				{
					"name": "https://git.kernel.org/stable/c/8186596a663506b1124bede9fde6f243ef9f37ee",
					"tags": [
						"Mailing List",
						"Patch"
					],
					"url": "https://git.kernel.org/stable/c/8186596a663506b1124bede9fde6f243ef9f37ee"
				},
				{
					"name": "https://git.kernel.org/stable/c/9d241c5d9a9b7ad95c90c6520272fe404d5ac88f",
					"tags": [
						"Mailing List",
						"Patch"
					],
					"url": "https://git.kernel.org/stable/c/9d241c5d9a9b7ad95c90c6520272fe404d5ac88f"
				},
				{
					"name": "https://git.kernel.org/stable/c/9d241c5d9a9b7ad95c90c6520272fe404d5ac88f",
					"tags": [
						"Mailing List",
						"Patch"
					],
					"url": "https://git.kernel.org/stable/c/9d241c5d9a9b7ad95c90c6520272fe404d5ac88f"
				},
				{
					"name": "https://git.kernel.org/stable/c/b4a074b1fb222164ed7d5c0b8c922dc4a0840848",
					"tags": [
						"Mailing List",
						"Patch"
					],
					"url": "https://git.kernel.org/stable/c/b4a074b1fb222164ed7d5c0b8c922dc4a0840848"
				},
				{
					"name": "https://git.kernel.org/stable/c/b4a074b1fb222164ed7d5c0b8c922dc4a0840848",
					"tags": [
						"Mailing List",
						"Patch"
					],
					"url": "https://git.kernel.org/stable/c/b4a074b1fb222164ed7d5c0b8c922dc4a0840848"
				},
				{
					"name": "https://git.kernel.org/stable/c/b9fbfb349eacc0820f91c797d7f0a3ac7a4935b5",
					"tags": [
						"Mailing List",
						"Patch"
					],
					"url": "https://git.kernel.org/stable/c/b9fbfb349eacc0820f91c797d7f0a3ac7a4935b5"
				},
				{
					"name": "https://git.kernel.org/stable/c/b9fbfb349eacc0820f91c797d7f0a3ac7a4935b5",
					"tags": [
						"Mailing List",
						"Patch"
					],
					"url": "https://git.kernel.org/stable/c/b9fbfb349eacc0820f91c797d7f0a3ac7a4935b5"
				},
				{
					"name": "https://git.kernel.org/stable/c/ff33299ec8bb80cdcc073ad9c506bd79bb2ed20b",
					"tags": [
						"Mailing List",
						"Patch"
					],
					"url": "https://git.kernel.org/stable/c/ff33299ec8bb80cdcc073ad9c506bd79bb2ed20b"
				},
				{
					"name": "https://git.kernel.org/stable/c/ff33299ec8bb80cdcc073ad9c506bd79bb2ed20b",
					"tags": [
						"Mailing List",
						"Patch"
					],
					"url": "https://git.kernel.org/stable/c/ff33299ec8bb80cdcc073ad9c506bd79bb2ed20b"
				}
			]
		}
	},
	"impact": {
		"baseMetricV3": {
			"cvssV3": {
				"attackComplexity": "HIGH",
				"attackVector": "PHYSICAL",
				"availabilityImpact": "HIGH",
				"baseScore": 6.4,
				"baseSeverity": "MEDIUM",
				"confidentialityImpact": "HIGH",
				"integrityImpact": "HIGH",
				"privilegesRequired": "NONE",
				"scope": "UNCHANGED",
				"userInteraction": "NONE",
				"vectorString": "CVSS:3.1/AV:P/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
				"version": "3.1"
			},
			"exploitabilityScore": 0.5,
			"impactScore": 5.9
		}
	},
	"configurations": {
		"CVE_data_version": "4.0",
		"nodes": [
			{
				"cpe_match": [
					{
						"cpe23Uri": "cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*",
						"versionEndExcluding": "6.5.3",
						"versionStartIncluding": "6.5",
						"vulnerable": true
					},
					{
						"cpe23Uri": "cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*",
						"versionEndExcluding": "6.4.16",
						"versionStartIncluding": "6.3",
						"vulnerable": true
					},
					{
						"cpe23Uri": "cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*",
						"versionEndExcluding": "6.1.53",
						"versionStartIncluding": "6.1.15",
						"vulnerable": true
					},
					{
						"cpe23Uri": "cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*",
						"versionEndExcluding": "5.15.132",
						"versionStartIncluding": "5.15.97",
						"vulnerable": true
					},
					{
						"cpe23Uri": "cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*",
						"versionEndExcluding": "5.10.195",
						"versionStartIncluding": "5.10.171",
						"vulnerable": true
					}
				],
				"operator": "OR"
			}
		]
	},
	"lastModifiedDate": "2024-11-21T08:40Z",
	"publishedDate": "2024-07-16T10:15Z"
}
