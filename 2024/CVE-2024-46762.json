{
	"cve": {
		"CVE_data_meta": {
			"ASSIGNER": "cve@kernel.org",
			"ID": "CVE-2024-46762"
		},
		"data_format": "MITRE",
		"data_type": "CVE",
		"data_version": "4.0",
		"description": {
			"description_data": [
				{
					"lang": "en",
					"value": "In the Linux kernel, the following vulnerability has been resolved:\n\nxen: privcmd: Fix possible access to a freed kirqfd instance\n\nNothing prevents simultaneous ioctl calls to privcmd_irqfd_assign() and\nprivcmd_irqfd_deassign(). If that happens, it is possible that a kirqfd\ncreated and added to the irqfds_list by privcmd_irqfd_assign() may get\nremoved by another thread executing privcmd_irqfd_deassign(), while the\nformer is still using it after dropping the locks.\n\nThis can lead to a situation where an already freed kirqfd instance may\nbe accessed and cause kernel oops.\n\nUse SRCU locking to prevent the same, as is done for the KVM\nimplementation for irqfds."
				}
			]
		},
		"problemtype": {
			"problemtype_data": [
				{}
			]
		},
		"references": {
			"reference_data": [
				{
					"name": "https://git.kernel.org/stable/c/e997b357b13a7d95de31681fc54fcc34235fa527",
					"url": "https://git.kernel.org/stable/c/e997b357b13a7d95de31681fc54fcc34235fa527"
				},
				{
					"name": "https://git.kernel.org/stable/c/112fd2f02b308564724b8e81006c254d20945c4b",
					"url": "https://git.kernel.org/stable/c/112fd2f02b308564724b8e81006c254d20945c4b"
				},
				{
					"name": "https://git.kernel.org/stable/c/611ff1b1ae989a7bcce3e2a8e132ee30e968c557",
					"url": "https://git.kernel.org/stable/c/611ff1b1ae989a7bcce3e2a8e132ee30e968c557"
				}
			]
		}
	},
	"impact": {},
	"configurations": {
		"CVE_data_version": "4.0"
	},
	"lastModifiedDate": "2024-09-18T08:15Z",
	"publishedDate": "2024-09-18T08:15Z"
}
