{
	"cve": {
		"CVE_data_meta": {
			"ASSIGNER": "cve@kernel.org",
			"ID": "CVE-2024-50164"
		},
		"data_format": "MITRE",
		"data_type": "CVE",
		"data_version": "4.0",
		"description": {
			"description_data": [
				{
					"lang": "en",
					"value": "In the Linux kernel, the following vulnerability has been resolved:\n\nbpf: Fix overloading of MEM_UNINIT's meaning\n\nLonial reported an issue in the BPF verifier where check_mem_size_reg()\nhas the following code:\n\n    if (!tnum_is_const(reg->var_off))\n        /* For unprivileged variable accesses, disable raw\n         * mode so that the program is required to\n         * initialize all the memory that the helper could\n         * just partially fill up.\n         */\n         meta = NULL;\n\nThis means that writes are not checked when the register containing the\nsize of the passed buffer has not a fixed size. Through this bug, a BPF\nprogram can write to a map which is marked as read-only, for example,\n.rodata global maps.\n\nThe problem is that MEM_UNINIT's initial meaning that \"the passed buffer\nto the BPF helper does not need to be initialized\" which was added back\nin commit 435faee1aae9 (\"bpf, verifier: add ARG_PTR_TO_RAW_STACK type\")\ngot overloaded over time with \"the passed buffer is being written to\".\n\nThe problem however is that checks such as the above which were added later\nvia 06c1c049721a (\"bpf: allow helpers access to variable memory\") set meta\nto NULL in order force the user to always initialize the passed buffer to\nthe helper. Due to the current double meaning of MEM_UNINIT, this bypasses\nverifier write checks to the memory (not boundary checks though) and only\nassumes the latter memory is read instead.\n\nFix this by reverting MEM_UNINIT back to its original meaning, and having\nMEM_WRITE as an annotation to BPF helpers in order to then trigger the\nBPF verifier checks for writing to memory.\n\nSome notes: check_arg_pair_ok() ensures that for ARG_CONST_SIZE{,_OR_ZERO}\nwe can access fn->arg_type[arg - 1] since it must contain a preceding\nARG_PTR_TO_MEM. For check_mem_reg() the meta argument can be removed\naltogether since we do check both BPF_READ and BPF_WRITE. Same for the\nequivalent check_kfunc_mem_size_reg()."
				}
			]
		},
		"problemtype": {
			"problemtype_data": [
				{
					"description": [
						{
							"lang": "en",
							"value": "NVD-CWE-noinfo"
						}
					]
				}
			]
		},
		"references": {
			"reference_data": [
				{
					"name": "https://git.kernel.org/stable/c/48068ccaea957469f1adf78dfd2c1c9a7e18f0fe",
					"tags": [
						"Patch"
					],
					"url": "https://git.kernel.org/stable/c/48068ccaea957469f1adf78dfd2c1c9a7e18f0fe"
				},
				{
					"name": "https://git.kernel.org/stable/c/54bc31682660810af1bed7ca7a19f182df8d3df8",
					"tags": [
						"Patch"
					],
					"url": "https://git.kernel.org/stable/c/54bc31682660810af1bed7ca7a19f182df8d3df8"
				},
				{
					"name": "https://git.kernel.org/stable/c/8ea607330a39184f51737c6ae706db7fdca7628e",
					"tags": [
						"Patch"
					],
					"url": "https://git.kernel.org/stable/c/8ea607330a39184f51737c6ae706db7fdca7628e"
				}
			]
		}
	},
	"impact": {
		"baseMetricV3": {
			"cvssV3": {
				"attackComplexity": "LOW",
				"attackVector": "LOCAL",
				"availabilityImpact": "HIGH",
				"baseScore": 7.1,
				"baseSeverity": "HIGH",
				"confidentialityImpact": "NONE",
				"integrityImpact": "HIGH",
				"privilegesRequired": "LOW",
				"scope": "UNCHANGED",
				"userInteraction": "NONE",
				"vectorString": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:H/A:H",
				"version": "3.1"
			},
			"exploitabilityScore": 1.8,
			"impactScore": 5.2
		}
	},
	"configurations": {
		"CVE_data_version": "4.0",
		"nodes": [
			{
				"cpe_match": [
					{
						"cpe23Uri": "cpe:2.3:o:linux:linux_kernel:6.12:rc1:*:*:*:*:*:*",
						"vulnerable": true
					},
					{
						"cpe23Uri": "cpe:2.3:o:linux:linux_kernel:6.12:rc2:*:*:*:*:*:*",
						"vulnerable": true
					},
					{
						"cpe23Uri": "cpe:2.3:o:linux:linux_kernel:6.12:rc4:*:*:*:*:*:*",
						"vulnerable": true
					},
					{
						"cpe23Uri": "cpe:2.3:o:linux:linux_kernel:6.12:rc3:*:*:*:*:*:*",
						"vulnerable": true
					},
					{
						"cpe23Uri": "cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*",
						"versionEndExcluding": "6.11.6",
						"versionStartIncluding": "6.7",
						"vulnerable": true
					},
					{
						"cpe23Uri": "cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*",
						"versionEndExcluding": "6.6.59",
						"versionStartIncluding": "5.19",
						"vulnerable": true
					}
				],
				"operator": "OR"
			}
		]
	},
	"lastModifiedDate": "2024-11-22T16:51Z",
	"publishedDate": "2024-11-07T10:15Z"
}
