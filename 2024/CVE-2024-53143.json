{
	"cve": {
		"CVE_data_meta": {
			"ASSIGNER": "cve@kernel.org",
			"ID": "CVE-2024-53143"
		},
		"data_format": "MITRE",
		"data_type": "CVE",
		"data_version": "4.0",
		"description": {
			"description_data": [
				{
					"lang": "en",
					"value": "In the Linux kernel, the following vulnerability has been resolved:\n\nfsnotify: Fix ordering of iput() and watched_objects decrement\n\nEnsure the superblock is kept alive until we're done with iput().\nHolding a reference to an inode is not allowed unless we ensure the\nsuperblock stays alive, which fsnotify does by keeping the\nwatched_objects count elevated, so iput() must happen before the\nwatched_objects decrement.\nThis can lead to a UAF of something like sb->s_fs_info in tmpfs, but the\nUAF is hard to hit because race orderings that oops are more likely, thanks\nto the CHECK_DATA_CORRUPTION() block in generic_shutdown_super().\n\nAlso, ensure that fsnotify_put_sb_watched_objects() doesn't call\nfsnotify_sb_watched_objects() on a superblock that may have already been\nfreed, which would cause a UAF read of sb->s_fsnotify_info."
				}
			]
		},
		"problemtype": {
			"problemtype_data": [
				{}
			]
		},
		"references": {
			"reference_data": [
				{
					"name": "https://git.kernel.org/stable/c/21d1b618b6b9da46c5116c640ac4b1cc8d40d63a",
					"url": "https://git.kernel.org/stable/c/21d1b618b6b9da46c5116c640ac4b1cc8d40d63a"
				},
				{
					"name": "https://git.kernel.org/stable/c/45a8f8232a495221ed058191629f5c628f21601a",
					"url": "https://git.kernel.org/stable/c/45a8f8232a495221ed058191629f5c628f21601a"
				},
				{
					"name": "https://git.kernel.org/stable/c/83af1cfa10d9aafdabd06b3655e07727f373b434",
					"url": "https://git.kernel.org/stable/c/83af1cfa10d9aafdabd06b3655e07727f373b434"
				}
			]
		}
	},
	"impact": {},
	"configurations": {
		"CVE_data_version": "4.0"
	},
	"lastModifiedDate": "2024-12-13T14:15Z",
	"publishedDate": "2024-12-07T07:15Z"
}
