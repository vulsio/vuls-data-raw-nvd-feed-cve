{
	"cve": {
		"CVE_data_meta": {
			"ASSIGNER": "security-advisories@github.com",
			"ID": "CVE-2024-47834"
		},
		"data_format": "MITRE",
		"data_type": "CVE",
		"data_version": "4.0",
		"description": {
			"description_data": [
				{
					"lang": "en",
					"value": "GStreamer is a library for constructing graphs of media-handling components. An Use-After-Free read vulnerability has been discovered affecting the processing of CodecPrivate elements in Matroska streams. In the GST_MATROSKA_ID_CODECPRIVATE case within the gst_matroska_demux_parse_stream function, a data chunk is allocated using gst_ebml_read_binary. Later, the allocated memory is freed in the gst_matroska_track_free function, by the call to g_free (track->codec_priv). Finally, the freed memory is accessed in the caps_serialize function through gst_value_serialize_buffer. The freed memory will be accessed in the gst_value_serialize_buffer function. This results in a UAF read vulnerability, as the function tries to process memory that has already been freed. This vulnerability is fixed in 1.24.10."
				}
			]
		},
		"problemtype": {
			"problemtype_data": [
				{
					"description": [
						{
							"lang": "en",
							"value": "CWE-416"
						}
					]
				}
			]
		},
		"references": {
			"reference_data": [
				{
					"name": "https://gitlab.freedesktop.org/gstreamer/gstreamer/-/merge_requests/8057.patch",
					"url": "https://gitlab.freedesktop.org/gstreamer/gstreamer/-/merge_requests/8057.patch"
				},
				{
					"name": "https://gstreamer.freedesktop.org/security/sa-2024-0030.html",
					"url": "https://gstreamer.freedesktop.org/security/sa-2024-0030.html"
				},
				{
					"name": "https://securitylab.github.com/advisories/GHSL-2024-280_Gstreamer/",
					"url": "https://securitylab.github.com/advisories/GHSL-2024-280_Gstreamer/"
				}
			]
		}
	},
	"impact": {},
	"configurations": {
		"CVE_data_version": "4.0"
	},
	"lastModifiedDate": "2024-12-12T02:03Z",
	"publishedDate": "2024-12-12T02:03Z"
}
