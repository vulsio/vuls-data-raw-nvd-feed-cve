{
	"cve": {
		"CVE_data_meta": {
			"ASSIGNER": "cve@kernel.org",
			"ID": "CVE-2021-47421"
		},
		"data_format": "MITRE",
		"data_type": "CVE",
		"data_version": "4.0",
		"description": {
			"description_data": [
				{
					"lang": "en",
					"value": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/amdgpu: handle the case of pci_channel_io_frozen only in amdgpu_pci_resume\n\nIn current code, when a PCI error state pci_channel_io_normal is detectd,\nit will report PCI_ERS_RESULT_CAN_RECOVER status to PCI driver, and PCI\ndriver will continue the execution of PCI resume callback report_resume by\npci_walk_bridge, and the callback will go into amdgpu_pci_resume\nfinally, where write lock is releasd unconditionally without acquiring\nsuch lock first. In this case, a deadlock will happen when other threads\nstart to acquire the read lock.\n\nTo fix this, add a member in amdgpu_device strucutre to cache\npci_channel_state, and only continue the execution in amdgpu_pci_resume\nwhen it's pci_channel_io_frozen."
				}
			]
		},
		"problemtype": {
			"problemtype_data": [
				{}
			]
		},
		"references": {
			"reference_data": [
				{
					"name": "https://git.kernel.org/stable/c/72e9a1bf9b722628c28092e0c2cd8717edd201dc",
					"url": "https://git.kernel.org/stable/c/72e9a1bf9b722628c28092e0c2cd8717edd201dc"
				},
				{
					"name": "https://git.kernel.org/stable/c/248b061689a40f4fed05252ee2c89f87cf26d7d8",
					"url": "https://git.kernel.org/stable/c/248b061689a40f4fed05252ee2c89f87cf26d7d8"
				}
			]
		}
	},
	"impact": {},
	"configurations": {
		"CVE_data_version": "4.0"
	},
	"lastModifiedDate": "2024-05-21T15:15Z",
	"publishedDate": "2024-05-21T15:15Z"
}
