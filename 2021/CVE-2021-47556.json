{
	"cve": {
		"CVE_data_meta": {
			"ASSIGNER": "cve@kernel.org",
			"ID": "CVE-2021-47556"
		},
		"data_format": "MITRE",
		"data_type": "CVE",
		"data_version": "4.0",
		"description": {
			"description_data": [
				{
					"lang": "en",
					"value": "In the Linux kernel, the following vulnerability has been resolved:\n\nethtool: ioctl: fix potential NULL deref in ethtool_set_coalesce()\n\nethtool_set_coalesce() now uses both the .get_coalesce() and\n.set_coalesce() callbacks. But the check for their availability is\nbuggy, so changing the coalesce settings on a device where the driver\nprovides only _one_ of the callbacks results in a NULL pointer\ndereference instead of an -EOPNOTSUPP.\n\nFix the condition so that the availability of both callbacks is\nensured. This also matches the netlink code.\n\nNote that reproducing this requires some effort - it only affects the\nlegacy ioctl path, and needs a specific combination of driver options:\n- have .get_coalesce() and .coalesce_supported but no\n .set_coalesce(), or\n- have .set_coalesce() but no .get_coalesce(). Here eg. ethtool doesn't\n  cause the crash as it first attempts to call ethtool_get_coalesce()\n  and bails out on error."
				}
			]
		},
		"problemtype": {
			"problemtype_data": [
				{}
			]
		},
		"references": {
			"reference_data": [
				{
					"name": "https://git.kernel.org/stable/c/abfdd9e2f0f9699015d72317f74154d3e53664e6",
					"url": "https://git.kernel.org/stable/c/abfdd9e2f0f9699015d72317f74154d3e53664e6"
				},
				{
					"name": "https://git.kernel.org/stable/c/0276af2176c78771da7f311621a25d7608045827",
					"url": "https://git.kernel.org/stable/c/0276af2176c78771da7f311621a25d7608045827"
				}
			]
		}
	},
	"impact": {},
	"configurations": {
		"CVE_data_version": "4.0"
	},
	"lastModifiedDate": "2024-05-24T15:15Z",
	"publishedDate": "2024-05-24T15:15Z"
}
