{
	"cve": {
		"CVE_data_meta": {
			"ASSIGNER": "cve@kernel.org",
			"ID": "CVE-2022-48817"
		},
		"data_format": "MITRE",
		"data_type": "CVE",
		"data_version": "4.0",
		"description": {
			"description_data": [
				{
					"lang": "en",
					"value": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: dsa: ar9331: register the mdiobus under devres\n\nAs explained in commits:\n74b6d7d13307 (\"net: dsa: realtek: register the MDIO bus under devres\")\n5135e96a3dd2 (\"net: dsa: don't allocate the slave_mii_bus using devres\")\n\nmdiobus_free() will panic when called from devm_mdiobus_free() <-\ndevres_release_all() <- __device_release_driver(), and that mdiobus was\nnot previously unregistered.\n\nThe ar9331 is an MDIO device, so the initial set of constraints that I\nthought would cause this (I2C or SPI buses which call ->remove on\n->shutdown) do not apply. But there is one more which applies here.\n\nIf the DSA master itself is on a bus that calls ->remove from ->shutdown\n(like dpaa2-eth, which is on the fsl-mc bus), there is a device link\nbetween the switch and the DSA master, and device_links_unbind_consumers()\nwill unbind the ar9331 switch driver on shutdown.\n\nSo the same treatment must be applied to all DSA switch drivers, which\nis: either use devres for both the mdiobus allocation and registration,\nor don't use devres at all.\n\nThe ar9331 driver doesn't have a complex code structure for mdiobus\nremoval, so just replace of_mdiobus_register with the devres variant in\norder to be all-devres and ensure that we don't free a still-registered\nbus."
				}
			]
		},
		"problemtype": {
			"problemtype_data": [
				{}
			]
		},
		"references": {
			"reference_data": [
				{
					"name": "https://git.kernel.org/stable/c/475ce5dcf2d88fd4f3c213a0ac944e3e40702970",
					"url": "https://git.kernel.org/stable/c/475ce5dcf2d88fd4f3c213a0ac944e3e40702970"
				},
				{
					"name": "https://git.kernel.org/stable/c/475ce5dcf2d88fd4f3c213a0ac944e3e40702970",
					"url": "https://git.kernel.org/stable/c/475ce5dcf2d88fd4f3c213a0ac944e3e40702970"
				},
				{
					"name": "https://git.kernel.org/stable/c/50facd86e9fbc4b93fe02e5fe05776047f45dbfb",
					"url": "https://git.kernel.org/stable/c/50facd86e9fbc4b93fe02e5fe05776047f45dbfb"
				},
				{
					"name": "https://git.kernel.org/stable/c/50facd86e9fbc4b93fe02e5fe05776047f45dbfb",
					"url": "https://git.kernel.org/stable/c/50facd86e9fbc4b93fe02e5fe05776047f45dbfb"
				},
				{
					"name": "https://git.kernel.org/stable/c/aae1c6a1d3d696fc33b609fb12fe744a556d1dc5",
					"url": "https://git.kernel.org/stable/c/aae1c6a1d3d696fc33b609fb12fe744a556d1dc5"
				},
				{
					"name": "https://git.kernel.org/stable/c/aae1c6a1d3d696fc33b609fb12fe744a556d1dc5",
					"url": "https://git.kernel.org/stable/c/aae1c6a1d3d696fc33b609fb12fe744a556d1dc5"
				},
				{
					"name": "https://git.kernel.org/stable/c/f1842a8cb71de4d7eb75a86f76e88c7ee739218c",
					"url": "https://git.kernel.org/stable/c/f1842a8cb71de4d7eb75a86f76e88c7ee739218c"
				},
				{
					"name": "https://git.kernel.org/stable/c/f1842a8cb71de4d7eb75a86f76e88c7ee739218c",
					"url": "https://git.kernel.org/stable/c/f1842a8cb71de4d7eb75a86f76e88c7ee739218c"
				}
			]
		}
	},
	"impact": {},
	"configurations": {
		"CVE_data_version": "4.0"
	},
	"lastModifiedDate": "2024-11-21T07:34Z",
	"publishedDate": "2024-07-16T12:15Z"
}
